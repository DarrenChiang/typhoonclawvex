
/*
  Robotale Potentiometer Sample Sketch
*/

#include <math.h>
#include <MIDI.h>

const int potIn1 = A0;
const int potIn2 = A1;
const int potIn3 = A2;
const int potIn4 = A3;
const int digIn2 = 2;
int RawValue1 = 0;
int RawValue2 = 0;
int RawValue3 = 0;
int RawValue4 = 0;
int button = 0;
String key[][8] = {{"C","D","E","F","G","A","B","C1"}, 
                  {"G","A","B","C1","D1","E1","F#1","G1"}, 
                  {"D","E","F#","G","A","B","C#1","D1"},
                  {"A","B","C#1","D1","E1","F#1","G#1","A1"}, 
                  {"E","F#","G#","A","B","C#1","D#1","E1"}, 
                  {"B0","C#","D#","E","F#","G#","A#","B"}, 
                  {"F#","G#","A#","B","C#1","D#1","E#1","F#1"},
                  {"F","G","A","Bb","C1","D1","E1","F1"},
                  {"Bb0","C","D","Eb","F","G","A","Bb"},
                  {"Eb","F","G","Ab","Bb","C1","D1","Eb1"},
                  {"Ab0","Bb0","C","Db","Eb","F","G","Ab"},
                  {"Db","Eb","F","Gb","Ab","Bb","C1","Db1"},
                  {"Gb0","Ab0","Bb0","Cb","Db","Eb","F","Gb"}};

/*                   
C調 C,D,E,F,G,A,B,C 沒有升降記號 
G調 G,A,B,C,D,E,F#,G 1 個升記號 
D調 D,E,F#,G,A,B,C#,D 2 個升記號 
A調 A,B,C#,D,E,F#,G#,A 3 個升記號 
E調 E,F#,G#,A,B,C#,D#,E 4 個升記號 
B調 B,C#,D#,E,F#,G#,A#,B 5 個升記號 
F#調 F#,G#,A#,B,C#,D#,E#,F# 6個升記號 

F調 F,G,A,Bb,C,D,E,F 1 個降記號 
Bb調 Bb,C,D,Eb,F,G,A,Bb 2 個降記號 
Eb調 Eb,F,G,Ab,Bb,C,D,Eb 3 個降記號 
Ab調 Ab,Bb,C,Db,Eb,F,G,Ab 4 個降記號 
Db調 Db,Eb,F,Gb,Ab,Bb,C,Db, 5 個降記號 
Gb調 Gb,Ab,Bb,Cb,Db,Eb,F,Gb, 6個降記號 
*/

String notes[] = {"C","C#","D","D#","E","F","F#","G","G#","A","A#","B"};
int index;

void noteOn(byte channel, byte pitch, byte velocity) {
  MIDIEvent noteOn = {0x09, 0x90 | channel, pitch, velocity};
  MIDIUSB.write(noteOn);
}

void noteOff(byte channel, byte pitch, byte velocity) {
  MIDIEvent noteOff = {0x08, 0x80 | channel, pitch, velocity};
  MIDIUSB.write(noteOff);
}

void playNote(String _note, int octave, int t){
  for(int i=0; i<12; i++){
    if(_note.equals(notes[i])){
      index = i;
    }
  }
  noteOn(0, index+octave*12, 64);
  MIDIUSB.flush();
  delay(t);
  
  noteOff(0, index+octave*12, 64);
  MIDIUSB.flush();
}

void setup() {
  pinMode(potIn1, INPUT);
  pinMode(potIn2, INPUT);
  pinMode(potIn3, INPUT);
  pinMode(digIn2, INPUT);
  //pinMode(potIn4, INPUT);
  Serial.begin(9600);
}



void loop()  {
  button = digitalRead(digIn2);
  RawValue1 = analogRead(potIn1);
  RawValue2 = analogRead(potIn2);
  RawValue3 = analogRead(potIn3);
  //  RawValue4 = analogRead(potIn4);
  int _key = round((double)RawValue1/1023*12);
  int _notei = round((double)RawValue2/1023*7);
  int _range = round((double)RawValue3/1023*2+4);
  String _note;
  if(key[_key][_notei][key[_key][_notei].length()-1] == '1'){
    _range+=1;
    _note = key[_key][_notei].substring(0,key[_key][_notei].length()-1);
  }else if(key[_key][_notei][key[_key][_notei].length()-1] == '0'){
    _range-=1;
    _note = key[_key][_notei].substring(0,key[_key][_notei].length()-1);
  }else{
    _note = key[_key][_notei];
  }
  Serial.print("key: ");
  Serial.println(_key);
  Serial.print("note: ");
  Serial.println(_note);
  Serial.print("range: ");
  Serial.println(_range);
  Serial.println("RawValue123: ");
  Serial.println(RawValue1);
  Serial.println(RawValue2);
  Serial.println(RawValue3);
  //  Serial.print("Slider 1: ");
  //  Serial.println(RawValue1); //3 digits after decimal point
  //  Serial.print("Slider 2: ");
  //  Serial.println(analogRead(potIn2)); //3 digits after decimal point
  playNote(_note, _range, 500);
  delay(500);   // 1/2 sec so your display doesnt't scroll too fast
}
